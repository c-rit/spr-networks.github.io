"use strict";(self.webpackChunkspr_docs=self.webpackChunkspr_docs||[]).push([[3953],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(r),d=i,m=u["".concat(c,".").concat(d)]||u[d]||f[d]||o;return r?n.createElement(m,a(a({ref:t},l),{},{components:r})):n.createElement(m,a({ref:t},l))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:i,a[1]=s;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2196:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=r(7462),i=(r(7294),r(3905));const o={},a="Wifid",s={unversionedId:"services/wifid",id:"services/wifid",title:"Wifid",description:"The wifi service runs Hostap with some patches for better WPA3 support that will be submitted upstream at some point in the future.",source:"@site/docs/services/wifid.md",sourceDirName:"services",slug:"/services/wifid",permalink:"/pages/docs/services/wifid",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Watchdog",permalink:"/pages/docs/services/watchdog"},next:{title:"FAQ",permalink:"/pages/docs/faq"}},c={},p=[],l={toc:p};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"wifid"},"Wifid"),(0,i.kt)("p",null,"The wifi service runs ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/spr-networks/hostap/"},"Hostap")," with some patches for better WPA3 support that will be submitted upstream at some point in the future."),(0,i.kt)("p",null,"The service supports multiple radio interfaces, and will run parallel hostap daemons to manage them."),(0,i.kt)("p",null,"When a station successfully authenticates, fails to, or disconnects: an ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/spr-networks/super/blob/19cace6e3749593e8ef5cd41d34db84d26b3fef6/wifid/scripts/action.sh#L1"},"action script")," is ran to inform the API as well as helper program. This communication happens over a dedicated unix socket ",(0,i.kt)("a",{parentName:"p",href:"/api/0#tag/unix_wifid"},"documented")," here."),(0,i.kt)("p",null,"Once a station authenticates successfully, a ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/spr-networks/super/blob/19cace6e3749593e8ef5cd41d34db84d26b3fef6/wifid/code/main.go#L1"},"helper program")," is kicked off to grant permission to DHCP from the client's approved MAC address. An ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/spr-networks/super/blob/19cace6e3749593e8ef5cd41d34db84d26b3fef6/wifid/code/filter_dhcp_mismatch.c#L1"},"XDP filter")," is employed to block stations from making DHCP requests for arbitrary MAC addresses."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/spr-networks/super/tree/main/wifid"}," \u21e8 View the code")))}u.isMDXComponent=!0}}]);