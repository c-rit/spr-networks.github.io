"use strict";(self.webpackChunkspr_docs=self.webpackChunkspr_docs||[]).push([[9748],{55324:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=s(85893),r=s(11151);const i={},a="SSL Support",o={id:"apis/ssl_support",title:"SSL Support",description:"The API service looks for a certificate at configs/base/www-api.crt and the corresponding key configs/base/www-api.key.",source:"@site/docs/apis/ssl_support.md",sourceDirName:"apis",slug:"/apis/ssl_support",permalink:"/pages/docs/apis/ssl_support",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Authentication",permalink:"/pages/docs/apis/p_webapi_authentication"},next:{title:"Frequently Asked Questions",permalink:"/pages/docs/faq"}},c={},l=[{value:"Enable SSL web api",id:"enable-ssl-web-api",level:3}];function p(e){const n={code:"code",em:"em",h1:"h1",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"ssl-support",children:"SSL Support"}),"\n",(0,t.jsxs)(n.p,{children:["The API service looks for a certificate at ",(0,t.jsx)(n.code,{children:"configs/base/www-api.crt"})," and the corresponding key ",(0,t.jsx)(n.code,{children:"configs/base/www-api.key"}),".\nIf they exist the api will listen on port 443 for TLS-encrypted requests."]}),"\n",(0,t.jsx)(n.p,{children:"Use the provided script to generate a self-signed certificate."}),"\n",(0,t.jsx)(n.h3,{id:"enable-ssl-web-api",children:"Enable SSL web api"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Generate a certificate"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"D=./ ./api/scripts/generate-certificate.sh\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Restart api container"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker compose restart api # (or restart api-virt if using the virtualized network variant)\n\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Verify the SSL service is running"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"curl -k https://127.0.0.1\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Open port 443 for WAN access (optional)"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"NOTE"})})," This is not recommended if running SPR on the internet."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'echo "UPSTREAM_SERVICES_ENABLE=1" >> configs/base/config.sh\ndocker compose restart api # (or restart api-virt if using the virtualized network variant)\n'})})]})}function d(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>a});var t=s(67294);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);