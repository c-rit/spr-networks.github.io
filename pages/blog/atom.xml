<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.supernetworks.org/pages/blog</id>
    <title>SPR Blog</title>
    <updated>2022-03-18T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://www.supernetworks.org/pages/blog"/>
    <subtitle>SPR Blog</subtitle>
    <icon>https://www.supernetworks.org/pages/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Running SPR on a Mini PC with WiFi 6]]></title>
        <id>spr_mini_pc</id>
        <link href="https://www.supernetworks.org/pages/blog/spr_mini_pc"/>
        <updated>2022-03-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Intro]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="intro">Intro<a class="hash-link" href="#intro" title="Direct link to heading">​</a></h2><p>In the blog post we'll describe how to build and run SPR on a Mini-PC. And we'll use a WiFi 6 capable radio inside.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="first-get-a-mini-pc-ready">First, get a Mini PC ready<a class="hash-link" href="#first-get-a-mini-pc-ready" title="Direct link to heading">​</a></h2><ol><li><p>Identify a good mini PC to use. <a href="https://twitter.com/willy_wong" target="_blank" rel="noopener noreferrer">Wilson</a> suggested
a look at QOTOM's i3 broadwell routers.</p><p>  The <a href="https://amzn.to/36qmZjI" target="_blank" rel="noopener noreferrer">g330</a> is not bad. It's a fanless build with a TDP of 15W. And with two mini pci-e slots available, both slots could be used to fit wifi radios and the SATA can be used for the hard disk.</p><a href="https://amzn.to/36qmZjI" target="_blank" rel="noopener noreferrer"><p>  <img src="https://m.media-amazon.com/images/I/61KcP6zQLsL._AC_SX679_.jpg"></p></a></li><li><p>Get a good WiFi radio.</p><p>We'll run with an 802.11ax card that works with Linux in AP mode (at least 802.11ac is recommended).</p><p>Mediatek is the disruptor in this space and supports AP mode on Linux. <!-- -->[<!-- -->NOTE: Many other cards will NOT work with ax in AP mode on Linux with open source drivers<!-- -->]<!-- --> . If you have recommendations please do not hesitate to reach out on the <a href="https://matrix.to/#/#spr:matrix.org" target="_blank" rel="noopener noreferrer">matrix chat</a>.  For the G330 Qotom, 2 antennas wires are provided to outside the case, so the 2x2 configuration is best.</p><p>The <a href="https://www.asiarf.com/shop/wifi-wlan/wifi_mini_pcie/wifi6-2t2r-dual-bands-dbdc-mpcie-card-11ax-mt7915-aw7915-npd/" target="_blank" rel="noopener noreferrer">MT7915</a> can be purchased from AsiaRF.</p><a href="https://www.asiarf.com/shop/wifi-wlan/wifi_mini_pcie/wifi6-2t2r-dual-bands-dbdc-mpcie-card-11ax-mt7915-aw7915-npd/" target="_blank" rel="noopener noreferrer"><p><img src="https://sp-ao.shortpixel.ai/client/to_webp,q_glossy,ret_img,w_400,h_400/https://www.asiarf.com/wp-content/uploads/2021/07/aw7915-npd-1_top.jpg"></p></a></li></ol><h2 class="anchor anchorWithStickyNavbar_mojV" id="setup">Setup<a class="hash-link" href="#setup" title="Direct link to heading">​</a></h2><p>Download and install Ubuntu Server. Since the WiFi 6 driver is a work in progress, we grabbed a daily release of, <a href="https://cdimage.ubuntu.com/ubuntu-server/daily-live/current/jammy-live-server-amd64.iso" target="_blank" rel="noopener noreferrer">Jammy Jellyfish 22.04</a> from the <a href="https://cdimage.ubuntu.com/ubuntu-server/daily-live/current/" target="_blank" rel="noopener noreferrer">Ubuntu Live</a> page to get the latest fixes. Copy the installer to installation media (a flash drive) then plug it in and go.</p><p>Then follow the <a href="/pages/docs/setup_run_spr">SPR Setup Guide</a>.</p><p>Our config/base/config.sh:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2"><span class="token plain">#!/bin/sh                                                                                                              </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">SSID_NAME=6lab                                                                                                         </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">SSID_INTERFACE=wlan1                                                                                                   </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">#PPPIF=eth0                                                                                                            </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">#WANIF=ppp0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">#PPP_VLANID=201</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">#PPP_PROVIDER=provider-config</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">WANIF=enp1s0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">RUN_WAN_DHCP=true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">RUN_WAN_DHCP_IPV=4</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Uncomment the next line if a second ethernet port goes to wired LAN</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">#LANIF=eth1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">VLANIF=wlan1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">VLANSIF=$VLANIF.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">LANIP=192.168.3.1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">DNSIP=$LANIP</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">TINYNETSTART=192.168.3.4</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">TINYNETSTOP=192.168.3.255</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">TINYNETMASK=255.255.255.252</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">TINYSLASHMASK=30</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">DOCKERNET=172.17.0.0/16</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">DOCKERIF=docker0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">WIREGUARD_PORT=51280</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">#WIREGUARD_NETWORK=192.168.3.1/24</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="configure-hostapd-for-80211ax">Configure hostapd for 802.11AX<a class="hash-link" href="#configure-hostapd-for-80211ax" title="Direct link to heading">​</a></h2><p>On the SPR device, modify <code>configs/wifi/hostapd.conf</code> and add:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2"><span class="token plain">ieee80211ax=1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">he_oper_chwidth=1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">he_su_beamformer=1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">he_su_beamformee=1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">he_mu_beamformer=1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">he_oper_chwidth=1 # 80mhz channel. set to 2 for 160mhz.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">he_oper_centr_freq_seg0_idx=42</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Restart wifid</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2"><span class="token plain">docker-compose restart wifid</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>Connect a wifi 6 client and verify HE codings are available</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># iw dev wlan1.4096 station dump -v  | grep bitrate</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        tx bitrate:     1200.9 MBit/s 80MHz HE-MCS 11 HE-NSS 2 HE-GI 0 HE-DCM 0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        rx bitrate:     720.6 MBit/s 80MHz HE-MCS 7 HE-NSS 2 HE-GI 0 HE-DCM 0</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="some-minor-notes-on-the-mt7915">Some minor notes on the MT7915<a class="hash-link" href="#some-minor-notes-on-the-mt7915" title="Direct link to heading">​</a></h2><p>The MT7915 is a Dual Mode driver. This means that it supports both 2Ghz and 5Ghz
frequencies simultaneously. For our install the 2ghz interface is on <code>wlan0</code> and 5Ghz on <code>wlan1</code>. This is really wonderful, since one card can serve older IOT devices that only run on 2Ghz as well as more modern devices at high speeds.</p><p>The linux kernel driver is not yet as stable as it could be, so beware that it may not yet be production ready -- several assertions and crashes were noticed.</p>]]></content>
        <author>
            <name>Alex Radocea</name>
            <uri>https://twitter.com/defendtheworld</uri>
        </author>
        <category label="SPR" term="SPR"/>
        <category label="x64" term="x64"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Supernetworks just Released a React User Interface]]></title>
        <id>UI Push</id>
        <link href="https://www.supernetworks.org/pages/blog/UI Push"/>
        <updated>2022-01-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[User Friendliness]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="user-friendliness">User Friendliness<a class="hash-link" href="#user-friendliness" title="Direct link to heading">​</a></h2><p>The SPR project started out as a series of bash scripts and configuration files. Adding new devices
was a little bit error prone, as everything was done on the command line. Each device would
require a new, strong password, and each device needed to be added to a zone's configuration.
Next, hostapd had to be restarted to get WPA3 password reloading to work. It was hard to debug and not apparent if things failed.</p><p>What would make SPR super useful, though, would be if it was easy to use. And a user interface can do that for us.</p><p>So this week, Supernetworks pushed out a <a href="https://github.com/spr-networks/super/tree/main/frontend" target="_blank" rel="noopener noreferrer">frontend</a> for testing.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="this-release-delivers-basic-ui-features">This Release Delivers Basic UI Features<a class="hash-link" href="#this-release-delivers-basic-ui-features" title="Direct link to heading">​</a></h2><p>Three functions are now available:</p><ul><li>Add a new wireless device to the network</li><li>List devices</li><li>Set device access zones</li></ul><p>While these are simple things, and seemingly easy, SPR's services work together to build a network
that is virtually unlike all other wifi setups available today. As a result, the base station service,
the DHCP server, and the API need to work together to leverage their features so that users have
a super smooth  experience.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="see-a-demo">See a Demo<a class="hash-link" href="#see-a-demo" title="Direct link to heading">​</a></h2><div><video width="100%" height="100%" playsinline="" muted="" controls="" src="/pages/video/sprui.mp4" type="video/mp4"></video></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="how-devices-are-connected-to-spr">How Devices are Connected to SPR<a class="hash-link" href="#how-devices-are-connected-to-spr" title="Direct link to heading">​</a></h3><ul><li>Each wireless device is on an isolated network, keyed in by their MAC address and passphrase</li><li>MAC/ARP spoofing is blocked by hardened firewall rules to completely stop ethernet/IP-based evasion for lateral movement</li><li>Zones specify the level of each individual device's access</li><li>Custom zones can create groups of devices that can intercommunicate without having full LAN access</li><li>Built in ad blocking with CoreDNS</li></ul><h4 class="anchor anchorWithStickyNavbar_mojV" id="some-of-the-challenges-were">Some of the challenges were<a class="hash-link" href="#some-of-the-challenges-were" title="Direct link to heading">​</a></h4><ul><li>Laying down a solid foundation between the API and frontend to make adding new features great</li><li>Supporting a smooth WPA3 experience, which uses a ZKP for authentication</li><li>Making it fast and easy to add a device without having to also know or enter its MAC address ahead of time</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="the-zones">The Zones<a class="hash-link" href="#the-zones" title="Direct link to heading">​</a></h2><p>The built in zones are</p><ul><li>DNS for outbound DNS queries</li><li>WAN for outbound internet access</li><li>LAN for general access to all local devices</li></ul><p>When a user types in a new name, such as "Cameras",  NFTables verdict maps gets created
by the API. All of the members of the maps can send and receive IP traffic to one another,
but do not get general access to the LAN.  In the future, custom firewall rules will be added
to further specify how the groups interact.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="whats-next-for-the-ui">What's Next for the UI<a class="hash-link" href="#whats-next-for-the-ui" title="Direct link to heading">​</a></h2><p>For the road map, I'm thinking about security features such as intrusion detection
or automated security scanning and fingerprinting, network debugging and bandwidth monitoring,
per-device ad blocking, and home automation.</p>]]></content>
        <author>
            <name>Alex Radocea</name>
            <uri>https://twitter.com/defendtheworld</uri>
        </author>
        <category label="SPR" term="SPR"/>
        <category label="UI" term="UI"/>
        <category label="React" term="React"/>
        <category label="Golang" term="Golang"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Announcing The SPR Project]]></title>
        <id>first-blog-post</id>
        <link href="https://www.supernetworks.org/pages/blog/first-blog-post"/>
        <updated>2022-01-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Hello, SPR]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="hello-spr">Hello, SPR<a class="hash-link" href="#hello-spr" title="Direct link to heading">​</a></h2><p>I'm happy to start releasing the <strong>Secure Programmable Router</strong> project to the world. I've been running my home WiFi
with it for the past few months and I'm beyond excited to give back to the open source community.
I started working on this project because I think that Linux provides a tremendous amount of agility and
power for secure home networking but I felt like there was no router project out there that pulled it all together.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="the-spr-project-is-about-several-things">The SPR project is about several things<a class="hash-link" href="#the-spr-project-is-about-several-things" title="Direct link to heading">​</a></h2><ul><li><p>A highly secure foundation to operate a home network where using the internet is safe and it's easy to see and control what IoT devices are up to when they are plugged in.</p></li><li><p>Making home privacy easy instead of begrudgingly sharing telemetry with big data companies.</p></li><li><p>Open source and empowering developers by lowering the barrier to entry for coding with home networking.</p></li><li><p>About reducing the barrier for entry.</p></li><li><p>Enabling scripting and rapid prototyping.</p></li><li><p>Adapting modern networking paradigms and tools that can meets today's needs.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="how-spr-came-to-be">How SPR Came To Be<a class="hash-link" href="#how-spr-came-to-be" title="Direct link to heading">​</a></h2><p>During the past year, I took a serious look at <a href="https://opnsense.org/" target="_blank" rel="noopener noreferrer">opnsense</a> and <a href="https://openwrt.org/" target="_blank" rel="noopener noreferrer">OpenWRT</a>, and ordered over a dozen different wifi routers to set up my home network. I sat down and built and deployed my own OpenWRT images and to set up secure wifi networks to connect with a more serious firewall. What I found was that the setups I had managed to achieve were not only frustrating to manage, but when I went to test their security, I found time and time again that vendor wifi routers were insecure due to fundamental limitations with the network designs. On top of that, they were <a href="https://www.zerodayinitiative.com/blog/2021/11/1/pwn2ownaustin" target="_blank" rel="noopener noreferrer">riddled with software security holes</a>. Unfortunately, running the open source builds of OpenWRT often had degraded performance versus the proprietary vendor patches or required breaking secure boot.</p><p>I felt frustrated because I felt like I had lost control over my own home network. I had only a basic idea of what I was running and what my devices were doing, let alone the routers themselves. Between smart bulbs and vacuum cleaners and home security cameras and speakers, TVs, gaming consoles, laptops, desktops, streaming devices, more routers, and work equipment, there was a lot of stuff that was online.</p><p>I've been working in computer security for over 15 years and I often get asked for how to set up a home network.</p><p>The best advice I could give people for their home wifi was to keep their mission critical systems on a dedicated wifi router, and plug that one into the main wifi router with all the other
"stuffs" that ultimately connects to the internet. This is awkward and requires switching networks or IGMP proxying to do discovery or zeroconf. This doesn't scale well across a multi-office home with repeaters and backhaul. It also doesn't scale well in an apartment where there's competition for radio bandwidth with neighbors for essentially one of only three coveted 80mhz channels on 5ghz.</p><p>The next best advice was to split out the "whatever" non-critical devices to the guest network, and the mission critical stuff on the main network. Hardening the guest network with isolation breaks discovery and streaming as well. In practice I found that most of the routers I looked at did not have good guest isolation anyway when enabled, something I will blog about later. No exploits are required, because more or less an attacker can just ask a router to send packets for them to work around hostapd's AP Isolation feature, and most of the routers will happily do what they do best, route the packets.</p><p>At the end of the day though, it's fundamentally a flawed idea to have a shared passphrase across many devices because that passphrase effectively lets devices spoof each other or attempt to intercept traffic, making it tough to truly firewall devices.</p><p>So then I started looking into enterprise wifi authentication: 802.1x  (EAP-PEAP, EAP-TLS, EAP-PWD). EAP-TLS really is the only secure way to do things since EAP-PEAP suffers from fundamental <a href="https://datatracker.ietf.org/doc/html/draft-josefsson-pppext-eap-tls-eap-10#section-5.8" target="_blank" rel="noopener noreferrer">man in the middle issues</a> that were <a href="https://github.com/latelee/hostapd/commit/a190189d221aaef869ae2f52f7ead75b0c327995" target="_blank" rel="noopener noreferrer">never fixed</a>. Or EAP-PWD (which is almost wpa3) would be great,  if it was supported by more devices and drivers, and well with EAP-TLS, certificate management is pain.</p><p>I really wished that one could just use a unique passphrase per device. Well, it turns out that yes, that works, and hostapd supports it out of the box. With some logic and <a href="https://github.com/spr-networks/hostap/commit/279c5203e4c767701ac9fb7cf31624390437d854" target="_blank" rel="noopener noreferrer">usability and correctness fixes</a> to hostapd, and it was easy to seamlessly add new devices and their passphrases on the fly.</p><p>Okay that was great. Next, I created strong device isolation with per-device subnets that could be configured to communicate with other subnets using forwarding rules. The resulting network was a bit too different than the spirit of the networking scripts in OpenWRT, and the patching became unreasonable to expect for upstream to accept, so I started from fresh ground.</p><p>SPR is implemented for rapid iteration. Services are containerized so that developers can swap out core services or roll up new ones in a testable, reproducible manner. An API drives configuration to allow for customization. SPR Runs off of Ubuntu, with Docker containers, and manages the network with NFTables. It uses hostapd for the base station software, CoreDHCP for DHCP, CoreDNS for DNS, and supports Wireguard.</p><p>SPR simply enables users to do better than today's status quo. It lets users run a hardened, secure network without restrictive drawbacks. It lets users connect their consumer electronics to the internet with the peace of mind that doing so does not weaken their home network security.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="whats-next">What's Next<a class="hash-link" href="#whats-next" title="Direct link to heading">​</a></h2><p>Today SPR runs as a proof of concept on a Raspberry Pi.  With a USB dongle it's well able to handle over a dozen wifi stations and serve data from the internet with rates up to 500mbps. Work is underway to expand to new systems.</p><p>I'm currently wrapping up a Web UI to make SPR user friendly. In the near future I'll be posting a road map for what's planned.</p><p>SPR is looking for users and contributors. Join the matrix chat: <a href="https://matrix.to/#/#spr:matrix.org" target="_blank" rel="noopener noreferrer">https://matrix.to/#/#spr:matrix.org</a></p>]]></content>
        <author>
            <name>Alex Radocea</name>
            <uri>https://twitter.com/defendtheworld</uri>
        </author>
        <category label="SPR" term="SPR"/>
        <category label="Hello World" term="Hello World"/>
    </entry>
</feed>