"use strict";(self.webpackChunkspr_docs=self.webpackChunkspr_docs||[]).push([[6410],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),f=s(n),d=i,m=f["".concat(c,".").concat(d)]||f[d]||l[d]||o;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:i,a[1]=p;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5533:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return l}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],p={},c="API Overview",s={unversionedId:"apis/overview",id:"apis/overview",title:"API Overview",description:"View the OpenAPI Documentation here",source:"@site/docs/apis/overview.md",sourceDirName:"apis",slug:"/apis/overview",permalink:"/pages/docs/apis/overview",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Welcome to SPR!",permalink:"/pages/docs/intro"},next:{title:"Authentication",permalink:"/pages/docs/apis/p_webapi_authentication"}},u={},l=[],f={toc:l};function d(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"api-overview"},"API Overview"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/api/0"},"View the OpenAPI Documentation here")),(0,o.kt)("p",null,"The API service exists for communication between service containers and to support\nexternal requests from the web front end or CLI tools."),(0,o.kt)("p",null,"The internal APIs run over unix sockets and rely on filesystem namespaces for authentication.\nCurrently there are a few internal APIs exposed to containers over unix sockets:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Support for ",(0,o.kt)("a",{parentName:"li",href:"/api/0#tag/unix_wifid"},"wifid service accepting stations")),(0,o.kt)("li",{parentName:"ul"},"Setting up dynamic firewall rules for ",(0,o.kt)("a",{parentName:"li",href:"/api/0#tag/unix_dhcpd"},"DHCP clients")),(0,o.kt)("li",{parentName:"ul"},"Support for ",(0,o.kt)("a",{parentName:"li",href:"/api/0#tag/unix_wireguard"},"wireguard peers "))),(0,o.kt)("p",null,"The API service can be configured with API Extensions in ",(0,o.kt)("inlineCode",{parentName:"p"},"state/api/config"),"."),(0,o.kt)("p",null,"API Extensions let other docker services expose web APIs with unix sockets that\nare relayed with a reverse proxy."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'\n{\n  "Plugins" : [{\n    "Name": "dyndns extension",\n    "URI": "dyndns",\n    "UnixPath": "/state/plugins/dyndns/dyndns_plugin"\n  }]\n}\n\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/spr-networks/super/tree/main/api"}," \u21e8 View the code")))}d.isMDXComponent=!0}}]);