"use strict";(self.webpackChunkspr_docs=self.webpackChunkspr_docs||[]).push([[3380],{28396:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var s=t(85893),o=t(11151);const i={},r="Making an API Extension",d={id:"guides/development/extension-dev",title:"Making an API Extension",description:"Get the sample code",source:"@site/docs/guides/development/extension-dev.md",sourceDirName:"guides/development",slug:"/guides/development/extension-dev",permalink:"/pages/docs/guides/development/extension-dev",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Docker Tips & Tricks",permalink:"/pages/docs/guides/development/docker-dev"},next:{title:"Testing",permalink:"/pages/docs/guides/development/testing"}},a={},c=[{value:"Get the sample code",id:"get-the-sample-code",level:2},{value:"Buiding &amp; Running",id:"buiding--running",level:2},{value:"API Calls",id:"api-calls",level:2},{value:"Configuring the plugin to auto-start",id:"configuring-the-plugin-to-auto-start",level:2},{value:"SPRBus notes",id:"sprbus-notes",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"making-an-api-extension",children:"Making an API Extension"}),"\n",(0,s.jsx)(n.h2,{id:"get-the-sample-code",children:"Get the sample code"}),"\n",(0,s.jsxs)(n.p,{children:["Get the ",(0,s.jsx)(n.a,{href:"https://github.com/spr-networks/super/tree/main/api_sample_plugin",children:"sample code"})]}),"\n",(0,s.jsxs)(n.p,{children:["Read the ",(0,s.jsx)(n.a,{href:"https://www.supernetworks.org/pages/docs/apis/overview#api-plugins",children:"api docs"})," for information about how plugins work"]}),"\n",(0,s.jsx)(n.h2,{id:"buiding--running",children:"Buiding & Running"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker compose build\nexport SUPERDIR=/home/spr/super/ #path where super is\ndocker compose up\n"})}),"\n",(0,s.jsx)(n.h2,{id:"api-calls",children:"API Calls"}),"\n",(0,s.jsx)(n.p,{children:"The plugin can export API extensions over a unix socket to the API."}),"\n",(0,s.jsx)(n.h2,{id:"configuring-the-plugin-to-auto-start",children:"Configuring the plugin to auto-start"}),"\n",(0,s.jsxs)(n.p,{children:["For now, SPR does not allow arbitrary containers to be configured from the UI alone.\nUpdate the ",(0,s.jsx)(n.code,{children:"configs/base/custom_compose_paths.json"})," to add the plugin. It is expected\nto be relative from the ",(0,s.jsx)(n.code,{children:"super/"})," directory, for example ",(0,s.jsx)(n.code,{children:"plugins/test/docker-comopse.yml"})]}),"\n",(0,s.jsx)(n.h2,{id:"sprbus-notes",children:"SPRBus notes"}),"\n",(0,s.jsx)(n.p,{children:"SPRBus is our event bus where the API can send events.\nThe sample includes commented code for how to use it."})]})}function p(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>r});var s=t(67294);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);